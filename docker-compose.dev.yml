services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: sfl-postgres-dev
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - '5432:5432'
    networks:
      - sfl-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 30s
      timeout: 10s
      retries: 3

  # Auth Service (Development with volume mounts)
  auth-service:
    build:
      context: ./sfl_authService
      dockerfile: Dockerfile
      target: development
    container_name: sfl-auth-dev
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${AUTH_DB_HOST}
      - DB_PORT=${AUTH_DB_PORT}
      - DB_USER=${AUTH_DB_USER}
      - DB_PASSWORD=${AUTH_DB_PASSWORD}
      - DB_NAME=${AUTH_DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - SERVER_PORT=${AUTH_SERVER_PORT}
      - SERVER_HOST=${AUTH_SERVER_HOST}
    volumes:
      - ./sfl_authService/src:/app/src:cached
      - ./sfl_authService/package.json:/app/package.json:cached
      - ./sfl_authService/tsconfig.json:/app/tsconfig.json:cached
      - /app/node_modules
    ports:
      - '3001:3001'
      - '9229:9229' # Debug port
    networks:
      - sfl-network
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev:docker
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3001/health']
      interval: 30s
      timeout: 10s
      retries: 3

  # League Service (Development with volume mounts)
  league-service:
    build:
      context: ./sfl_leagueService
      dockerfile: Dockerfile
      target: development
    container_name: sfl-league-dev
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${LEAGUE_DB_HOST}
      - DB_PORT=${LEAGUE_DB_PORT}
      - DB_USER=${LEAGUE_DB_USER}
      - DB_PASSWORD=${LEAGUE_DB_PASSWORD}
      - DB_NAME=${LEAGUE_DB_NAME}
      - SERVER_PORT=${LEAGUE_SERVER_PORT}
      - SERVER_HOST=${LEAGUE_SERVER_HOST}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ./sfl_leagueService/src:/app/src:cached
      - ./sfl_leagueService/package.json:/app/package.json:cached
      - ./sfl_leagueService/tsconfig.json:/app/tsconfig.json:cached
      - /app/node_modules
    ports:
      - '3002:3002'
      - '9231:9231' # Debug port
    networks:
      - sfl-network
    depends_on:
      postgres:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    command: npm run dev:docker
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3002/health']
      interval: 30s
      timeout: 10s
      retries: 3

  # Gateway Service (Development with volume mounts)
  gateway:
    build:
      context: ./sfl_gateway
      dockerfile: Dockerfile
      target: development
    container_name: sfl-gateway-dev
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${GATEWAY_PORT}
      - HOST=${GATEWAY_HOST}
      - AUTH_SERVICE_URL=${AUTH_SERVICE_URL}
      - LEAGUE_SERVICE_URL=http://league-service:${LEAGUE_SERVER_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
    volumes:
      - ./sfl_gateway/src:/app/src:cached
      - ./sfl_gateway/package.json:/app/package.json:cached
      - ./sfl_gateway/tsconfig.json:/app/tsconfig.json:cached
      - /app/node_modules
    ports:
      - '3000:3000'
      - '9230:9230' # Debug port
    networks:
      - sfl-network
    depends_on:
      auth-service:
        condition: service_healthy
      league-service:
        condition: service_healthy
    command: npm run dev:docker
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_dev_data:

networks:
  sfl-network:
    driver: bridge